{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Cloudformation template to Create ECS Cluster with Features: Creates ECS Service, Configures Cluster and Service's Scaling Policies and SNS Notification",
    "Parameters": {
        "VpcId": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "Select a VPC that allows instances to access the Internet.",
			"Default": "ECSVPC_ID"
        },
        "SubnetId": {
            "Type": "List<AWS::EC2::Subnet::Id>",
            "Description": "Select at two subnets in your selected VPC.",
			"Default": "ECSVPCSUBNET_ID"
        },
        "KeyName": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Description": "Select existing EC2 KeyPair to enable SSH access",
			"Default": "KEYPAIR_NAME"
        },
        "DesiredInstance": {
            "Type": "String",
            "Default": "DESIRED_INSTANCE_COUNT",
            "Description": "Number of instances to launch in your ECS cluster(Desired Count)."
        },
        "MaxSize": {
            "Type": "String",
            "Description": "Maximum number of instances can be launched in cluster. MaxSize > DesiredInstance(Default MaxSize:10)",
			"Default": "MAX_INSTANCE_COUNT"
        },
        "DesiredTask": {
            "Type": "String",
            "Default": "DESIRED_TASK_COUNT",
            "Description": "Number of Task to create in your ECS cluster."
        },
        "NotificationMailId": {
            "Description": "EMail address to notify if there are any scaling operations",
            "Type": "String",
            "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "ConstraintDescription": "must be a valid email address.",
			"Default": "SNSMAIL_ID"
        },
        "ServiceNetwork": {
            "Type": "String",
            "AllowedValues": [
                "bridge",
                "host",
                "none",
                "awsvpc"
            ],
            "ConstraintDescription": "Select Network Mode for Service",
			"Default": "ECS_SERVICE_NETWORK"
        },
        "InstanceType": {
            "Description": "Select EC2 instance type",
            "Type": "String",
            "Default": "EC2_INSTANCE_TYPE",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge"
            ],
            "ConstraintDescription": "Please choose a valid instance type."
        },
        "ECS_SERVICE_PARAMETER":{}
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VpcId",
                        "SubnetId"
                    ]
                },
                {
                    "Label": {
                        "default": "Instance Auto-Scaling Configuration"
                    },
                    "Parameters": [
                        "InstanceType",
                        "KeyName",
                        "DesiredInstance",
                        "MaxSize"
                    ]
                },
                {
                    "Label": {
                        "default": "Service Configuration"
                    },
                    "Parameters": [
                        "ServiceName0",
                        "TaskDefinition0",
                        "DesiredTask"
                    ]
                }
            ],
            "ParameterLabels": {
                "VpcId": {
                    "default": "Select VPC to create Cluster"
                },
                "MaxSize": {
                    "default": "Maximum Instance Size(Optional)"
                },
                "ServiceName0": {
                    "default": "Service Name(Optional)"
                }
            }
        }
    },
    "Mappings": {
        "AWSRegionToAMI": {
            "us-east-1": {
                "AMIID": "ami-fad25980"
            },
            "us-east-2": {
                "AMIID": "ami-58f5db3d"
            },
            "us-west-1": {
                "AMIID": "ami-62e0d802"
            },
            "us-west-2": {
                "AMIID": "ami-7114c909"
            },
            "eu-west-1": {
                "AMIID": "ami-62e0d802"
            },
            "eu-west-2": {
                "AMIID": "ami-dbfee1bf"
            },
            "eu-west-3": {
                "AMIID": "ami-d179ceac"
            },
            "eu-central-1": {
                "AMIID": "ami-05991b6a"
            },
            "ap-northeast-1": {
                "AMIID": "ami-56bd0030"
            },
            "ap-northeast-2": {
                "AMIID": "ami-7267c01c"
            },
            "ca-central-1": {
                "AMIID": "ami-918b30f5"
            },
            "ap-south-1": {
                "AMIID": "ami-e4d29c8b"
            },
            "sa-east-1": {
                "AMIID": "ami-d596d2b9"
            },
            "ap-southeast-1": {
                "AMIID": "ami-1bdc8b78"
            },
            "ap-southeast-2": {
                "AMIID": "ami-14b55f76"
            }
        }
    },
    "Conditions": {
        "HasMaxSize": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        "",
                        {
                            "Ref": "MaxSize"
                        }
                    ]
                }
            ]
        },
        "SvcAWSVPC": {
            "Fn::Equals": [
                {
                    "Ref": "ServiceNetwork"
                },
                "awsvpc"
            ]
        },
        "SvcNoAWSVPC": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ServiceNetwork"
                        },
                        "awsvpc"
                    ]
                }
            ]
        }
    },
    "Resources": {
        "ECSCluster": {
            "Type": "AWS::ECS::Cluster",
            "Properties": {
                "ClusterName": {
                    "Ref": "AWS::StackName"
                }
            }
        },
        "EcsSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "ECS Security Group",
                "VpcId": {
                    "Ref": "VpcId"
                }
            }
        },
        "EcsSecurityGroupHTTPinbound": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "EcsSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "80",
                "ToPort": "80",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "EcsSecurityGroupSSHinbound": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "EcsSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "EcsSecurityGroupALBports": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "EcsSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "31000",
                "ToPort": "61000",
                "SourceSecurityGroupId": {
                    "Ref": "EcsSecurityGroup"
                }
            }
        },
        "CloudwatchLogsGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {
                    "Fn::Join": [
                        "-",
                        [
                            "ECSLogGroup",
                            {
                                "Ref": "AWS::StackName"
                            }
                        ]
                    ]
                },
                "RetentionInDays": 14
            }
        },
        "ECSAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "VPCZoneIdentifier": {
                    "Ref": "SubnetId"
                },
                "LaunchConfigurationName": {
                    "Ref": "ContainerInstances"
                },
                "MinSize": "1",
                "MaxSize": {
                    "Fn::If": [
                        "HasMaxSize",
                        {
                            "Ref": "MaxSize"
                        },
                        10
                    ]
                },
                "DesiredCapacity": {
                    "Ref": "DesiredInstance"
                },
                "TerminationPolicies": [
                    "NewestInstance"
                ],
                "NotificationConfiguration": {
                    "TopicARN": {
                        "Ref": "NotificationTopic"
                    },
                    "NotificationTypes": [
                        "autoscaling:EC2_INSTANCE_LAUNCH",
                        "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
                        "autoscaling:EC2_INSTANCE_TERMINATE",
                        "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
                    ]
                }
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT15M"
                }
            },
            "UpdatePolicy": {
                "AutoScalingReplacingUpdate": {
                    "WillReplace": "true"
                }
            }
        },
        "ContainerInstances": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionToAMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMIID"
                    ]
                },
                "SecurityGroups": [
                    {
                        "Ref": "EcsSecurityGroup"
                    }
                ],
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "IamInstanceProfile": {
                    "Ref": "EC2InstanceProfile"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "echo ECS_CLUSTER=",
                                {
                                    "Ref": "ECSCluster"
                                },
                                " >> /etc/ecs/ecs.config\n",
                                "yum install -y aws-cfn-bootstrap\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource ECSAutoScalingGroup ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "scalingscaleDown": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
                "AdjustmentType": "ChangeInCapacity",
                "Cooldown": "300",
                "PolicyType": "SimpleScaling",
                "ScalingAdjustment": -1,
                "AutoScalingGroupName": {
                    "Ref": "ECSAutoScalingGroup"
                }
            }
        },
        "scalingscaleUp": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
                "AdjustmentType": "ChangeInCapacity",
                "Cooldown": "300",
                "PolicyType": "SimpleScaling",
                "ScalingAdjustment": 1,
                "AutoScalingGroupName": {
                    "Ref": "ECSAutoScalingGroup"
                }
            }
        },
        "alarmscaleDown": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "ActionsEnabled": "true",
                "ComparisonOperator": "LessThanOrEqualToThreshold",
                "EvaluationPeriods": "1",
                "MetricName": "MemoryReservation",
                "Namespace": "AWS/ECS",
                "Period": "300",
                "Statistic": "Average",
                "Threshold": "40.0",
                "AlarmActions": [
                    {
                        "Ref": "scalingscaleDown"
                    },
                    {
                        "Ref": "NotificationTopic"
                    }
                ],
                "Dimensions": [
                    {
                        "Name": "ClusterName",
                        "Value": {
                            "Ref": "ECSCluster"
                        }
                    }
                ]
            }
        },
        "alarmscaleUp": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "ActionsEnabled": "true",
                "ComparisonOperator": "GreaterThanOrEqualToThreshold",
                "EvaluationPeriods": "1",
                "MetricName": "MemoryReservation",
                "Namespace": "AWS/ECS",
                "Period": "300",
                "Statistic": "Average",
                "Threshold": "60.0",
                "AlarmActions": [
                    {
                        "Ref": "scalingscaleUp"
                    },
                    {
                        "Ref": "NotificationTopic"
                    }
                ],
                "Dimensions": [
                    {
                        "Name": "ClusterName",
                        "Value": {
                            "Ref": "ECSCluster"
                        }
                    }
                ]
            }
        },
        "EC2Role": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "ecs-service",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ecs:CreateCluster",
                                        "ecs:DeregisterContainerInstance",
                                        "ecs:DiscoverPollEndpoint",
                                        "ecs:Poll",
                                        "ecs:RegisterContainerInstance",
                                        "ecs:StartTelemetrySession",
                                        "ecs:Submit*",
                                        "ecr:*",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "AutoscalingRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "application-autoscaling.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "service-autoscaling",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "application-autoscaling:*",
                                        "cloudwatch:DescribeAlarms",
                                        "cloudwatch:PutMetricAlarm",
                                        "ecs:DescribeServices",
                                        "ecs:UpdateService"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "EC2InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "EC2Role"
                    }
                ]
            }
        },
        "NotificationTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "Subscription": [
                    {
                        "Endpoint": {
                            "Ref": "NotificationMailId"
                        },
                        "Protocol": "email"
                    }
                ]
            }
        },
	"ECS_SERVICE_TEMPLATE":{}
    },
    "Outputs": {
        "ecscluster": {
            "Value": {
                "Ref": "ECSCluster"
            }
        }    }
}
